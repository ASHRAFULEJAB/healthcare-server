// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String     @id @default(uuid())
  email                 String     @unique
  password              String
  role                  UserRole
  needPasswordChange    Boolean    @default(true)
  pushNotificationToken String?
  status                UserStatus @default(PENDING)
  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt
  Doctor                Doctor?

  @@map("users")
}

model Doctor {
  id                  String   @id @default(uuid())
  email               String   @unique
  name                String
  profilePhoto        String?
  contactNumber       String
  address             String?
  registrationNumber  String
  experience          Int      @default(0)
  gender              Gender
  apointmentFee       Int
  qualification       String
  currentWorkingPlace String
  designation         String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(references: [email], fields: [email])

  @@map("doctors")
}

model Specialties {
  id    String @id @default(uuid())
  title String

  @@map("specialties")
}


model Patient {
  id                        String                    @id @default(uuid())
  email                     String
  name                      String
  profilePhoto              String?
  contactNumber             String
  address                   String?            
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt

  @@map("patients")
}

model PatientHelthData {
  id                        String                    @id @default(uuid())
  dateOfBirth               DateTime
  gender                    Gender
  bloodGroup                BloodGroup
  hasAllergies              Boolean?                    @default(false)
  hasDiabetes               Boolean?                    @default(false)
  height                    String
  weight                    String
  smokingStatus             Boolean?                    @default(false)
  dietaryPreferences        String?
  PregnancyStatus           Boolean?                    @default(false)
  mentalHealthHistory       String                   
  immunizationStatus        Boolean?                    @default(false)
  hasPastSurgeries          Boolean?                    @default(false)
  recentAnxiety             Boolean?                    @default(false)
  recentDepression          Boolean?                    @default(false)
  maritalStatus             MaritalStatus
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt

  @@map("patientHelthDatas")
}

model medicalReport {
  id                        String                    @id @default(uuid())
  patientId                 String
  patient                                             Patient @relation(fields: [patientId], references: [id])
  
  ReportName                String
  ReportLink                String           
  createdAt                 DateTime                    @default(now())
  updatedAt                 DateTime                    @updatedAt

  @@map("medicalReports")
}

enum UserRole {
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  BLOCKED
  ACTIVE
  PENDING
}

enum Gender {
  MALE
  FEMALE
}
enum MaritalStatus {
  MARRIED
  UNMARRIED
}
enum BloodGroup {
  A+
  A-
  B+
  B-
  AB+
  AB-
  O+
  O-
}
